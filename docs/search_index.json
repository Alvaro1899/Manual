[["index.html", "Manual para publicar un libro en GitHub creado en Bookdown Antes de empezar Cuenta y repositorio Programa Git", " Manual para publicar un libro en GitHub creado en Bookdown Alvaro Martínez Rodríguez 2022-01-07 Antes de empezar Cuenta y repositorio Para poder hacer una publicación en Github es necesario crear una cuenta en esta plataforma. Para ello, hay que entrar en github.com y dar clic en Registrarse y posteriormente entrar a la cuenta. Una vez dentro, en el lado superior izquierdo se encuentra el boton new para crear un nuevo repositorio1. Figure 1: . Para crear el repositorio solo es necesario darle un nombre y dar clic en el boton Crear repositorio. Por ahora serà todo en GitHub, pero dejaremos la pagina abierta. Figure 2: . Programa Git Por otro lado tambien es necesario haber descargado Git.Este programa nos ayudarà a enlazar R studio con GitHub. Damos clic en descargas para windows y después ejecutamos el archivo Git-2.34.1-64-bit.exe que se descargó para instalar Git. Figure 3: . Por ùltimo, es necesario entrar en nuestro proyecto de R studio y seguimos los siguientes pasos. Abrimos Tools en la cinta de opciones -&gt; Version Control -&gt; Project SetUp -&gt; Opciòn Git/SVN -&gt; Cambiamos la opciòn de control project system de None a Git Figure 4: . Después de realizar los pasos anteriores iremos a View en la cinta de opciones y damos clic en Show Git. Con ello nos aparecerá la pestaña Git que usaremos màs adelante. Un repositorio es el sitio dentro del cual se alojarán los archivos del libro "],["preparar-la-carpeta-del-proyecto.html", "Preparar la carpeta del proyecto Carpeta docs Archivos de texto", " Preparar la carpeta del proyecto Carpeta docs Ahora, el siguiente paso es preparar la carpeta de nuestro proyecto. En este punto se espera que el lector ya haya construido el libro a través del boton Build Book en formato bookdown::github o bookdown::bs4_book de manera correcta. En nuestra carpeta de proyecto debemos crear una carpeta con el nombre de docs, en ella, GitHub podrà leer los archivos necesarios para el libro. Una vez creada, entraremos en la carpeta *_book*. Aquí se encuentran los archivos renderizados en html de cada capitulo, así como todos los recursos que utilizan. Todos estos archivos los copiaremos y los pegaremos en la carpeta que creamos. Figure 5: . Archivos de texto Lo siguiente a realizar es la creación de 4 archivos: .nojekyll, .Rbuildignore, .travis.yml, DESCRIPTION El primer archivo lo creáremos dentro de la carpeta docs y para ello abriremos un nuevo archivo en R de tipo texto. No escribiremos nada en el archivo, solo lo guardamos con el nombre .nojekyll File -&gt; New File -&gt; Text File Volvemos a crear un archivo de texto, escribimos el siguiente codigo dentro y lo guardamos en la carpta principal con el nombre .Rbuildignore Figure 6: . Ahora creamos otro archivo de texto con el siguiente codigo y lo guardamos con el nombre .travis.yml Figure 7: . Por ùltimo creamos otro archivo con el nombre de DESCRIPTION y escribimos lo siguiente: Figure 8: . "],["subida-de-archivos.html", "Subida de archivos Vinculaciòn Link", " Subida de archivos Vinculaciòn Hasta ahora hemos preparado nuestro proyecto para poderlo subir de manera correcta. Iremos a R studio para comenzar a subir los archivos. En la pestaña de Git y en el botón de engrane seleccionaremos la opción Shell. Se abrirá una ventana cmd, en ella, deberemos copiar el código que aparece en nuestro repositorio creado de GitHub. Esto permitirà que Rstudio y GitHub este conectados y le indicara a R en donde debe subir los archivos. Figure 9: . Figure 10: Resultado de pegar el codigo Cerramos la ventana de sistema cmd y regresamos a Rstudio. En la misma pestaña de Git nos aparecerán una serie de archivos que contiene nuestro libro y deberemos seleccionarlos todos dando clic en la columna de Staged2. Figure 11: . Presionaremos el botón de Commit y escribiremos en el recuadro derecho Subida de archivos y daremos clic en el botón Commit. Una vez termine el proceso resultante de paso anterior daremos clic en la flecha verde Push que esta en la parte superior derecha y esperaremos a que se suban los archivos. Figure 12: . Figure 13: Resultado final de Push Ahora ya tenemos nuestros archivos subidos en nuestro repositorio de GitHub. Link Para obtener el link del documento que acabamos de publicar debemos ir a nuestro repositorio en GitHub. Una ves dentro, podremos observar en la pantalla principal todos los archivos que se han subido de nuestro libro. Daremos clic en Settings Figure 14: . Dentro de Settings nos aparecerá un menú a la izquierda, en donde seleccionaremos la opción de Pages. En este apartado tenemos la sección de Source, ahì debemos cambiar la opciòn None por la rama Main y la carpeta Docs y lo guardamos con el botón Save. Una vez lo anterior, nos aparecerá en la parte de arriba el link de nuestro documento publicado. Figure 15: . Figure 16: . En ocaciones, despues de dar clic en el recuadro blanco tarda unos segundos en marcarlo, por lo que deberemos ser pacientes y no dar mas de un clic por archivo. "],["actualizaciòn.html", "Actualizaciòn", " Actualizaciòn Para actualizar nuestro libro solo hace falta volverlo a correr en formato bookdown::github o bookdown::bs4_book. Esto generara automáticamente los archivos en la carpeta *_book. Copiamos los archivos generados en docs, vamos a la carpeta Git en R, seleccionamos todos los archivos que aparezcan, entramos en Commit, escribimos Actualizaciòn, presionamos en Commit* de nuevo y despuès en Push. Verificamos que se hayan actualizado los documentos en GitHub. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
